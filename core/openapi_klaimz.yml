openapi: 3.0.1
info:
  title: Klaimz Backend API
  description: "This is the backend API for Klaimz app. It is a RESTful API that provides\
    \ endpoints for managing users, roles, and form fields."
  version: "1.0"
paths:
  /analytics/claim:
    post:
      operationId: getClaimAnalytics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChartAnalyticsRequest'
        required: true
      responses:
        "200":
          description: getClaimAnalytics 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
  /analytics/top:
    post:
      operationId: getTopAnalytics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopKClaimRequest'
        required: true
      responses:
        "200":
          description: getTopAnalytics 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
  /claim:
    post:
      operationId: createClaim
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Claim'
        required: true
      responses:
        "200":
          description: createClaim 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
  /claim/all:
    get:
      operationId: getAllClaims
      responses:
        "200":
          description: getAllClaims 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
  /claim/search:
    post:
      operationId: search
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Filter'
        required: true
      responses:
        "200":
          description: search 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
  /claim/types:
    get:
      operationId: getClaimTypes
      responses:
        "200":
          description: getClaimTypes 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
    post:
      operationId: createClaimType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimType'
        required: true
      responses:
        "200":
          description: createClaimType 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
  /claim/{id}:
    get:
      operationId: getClaimById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          minLength: 1
          type: string
      responses:
        "200":
          description: getClaimById 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
    patch:
      operationId: updateClaim
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Claim'
        required: true
      responses:
        "200":
          description: updateClaim 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
  /claim/{id}/comment:
    post:
      operationId: addComment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          minLength: 1
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericDto'
        required: true
      responses:
        "200":
          description: addComment 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
  /claim/{id}/status:
    post:
      operationId: updateStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericDto'
        required: true
      responses:
        "200":
          description: updateStatus 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
  /claim/{id}/{fieldKey}/download:
    get:
      operationId: download
      parameters:
      - name: fieldKey
        in: path
        required: true
        schema:
          minLength: 1
          type: string
      - name: id
        in: path
        required: true
        schema:
          minLength: 1
          type: string
      - name: file
        in: query
        required: true
        schema:
          minLength: 1
          type: string
      responses:
        "200":
          description: download 200 response
          content:
            application/json:
              schema:
                type: object
  /claim/{id}/{fieldKey}/upload:
    post:
      operationId: upload
      parameters:
      - name: fieldKey
        in: path
        required: true
        schema:
          minLength: 1
          type: string
      - name: id
        in: path
        required: true
        schema:
          minLength: 1
          type: string
      - name: file
        in: query
        required: true
        schema:
          minLength: 1
          type: string
      responses:
        "200":
          description: upload 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
  /product:
    post:
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      responses:
        "200":
          description: createProduct 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
  /product/all:
    get:
      operationId: getAllProducts
      responses:
        "200":
          description: getAllProducts 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
  /product/{id}:
    get:
      operationId: getProductById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          minLength: 1
          type: string
      responses:
        "200":
          description: getProductById 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
  /user/all:
    get:
      operationId: getAllUsers
      responses:
        "200":
          description: getAllUsers 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
  /user/me:
    get:
      operationId: me
      responses:
        "200":
          description: me 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
  /user/search:
    post:
      operationId: search_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filter'
        required: true
      responses:
        "200":
          description: search_1 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
  /user/signup:
    post:
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignUp'
        required: true
      responses:
        "200":
          description: registerUser 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
  /user/{id}:
    get:
      operationId: getUserById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getUserById 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
  /warmup:
    get:
      operationId: warmUp
      responses:
        "200":
          description: warmUp 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBean'
components:
  schemas:
    ChartAnalyticsRequest:
      required:
      - aggregate-by
      - aggregate-type
      - chart-type
      - group-by
      type: object
      properties:
        fields:
          type: array
          items:
            type: string
        filters:
          type: array
          items:
            $ref: '#/components/schemas/Filter'
        group-by:
          minLength: 1
          type: string
        aggregate-by:
          minLength: 1
          type: string
        aggregate-type:
          minLength: 1
          type: string
        chart-type:
          minLength: 1
          type: string
    Claim:
      required:
      - amount
      - claim-manager
      - claim-template-id
      - created-date
      - evaluator
      - fields
      - id
      - products
      - requester
      - status
      - update-date
      - updates
      type: object
      properties:
        id:
          type: string
        amount:
          minimum: 0
          type: number
          format: double
        created-date:
          type: string
          format: date-time
        status:
          minLength: 1
          type: string
        products:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Claim.ProductDTO'
        fields:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Claim.FormFieldValue'
        update-date:
          type: string
          format: date-time
        requester:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/User'
        evaluator:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/User'
        claim-manager:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/User'
        updates:
          type: array
          items:
            $ref: '#/components/schemas/Claim.ClaimUpdate'
        claim-template-id:
          minLength: 1
          type: string
    Claim.ClaimUpdate:
      required:
      - comment
      - id
      - new-value
      - old-value
      - time
      - type
      - user
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        comment:
          type: string
        new-value:
          type: string
        old-value:
          type: string
        time:
          type: integer
          format: int64
        user:
          type: string
    Claim.FormFieldValue:
      required:
      - key
      - type
      - value
      type: object
      properties:
        key:
          minLength: 1
          type: string
        type:
          minLength: 1
          type: string
        value:
          type: string
    Claim.ProductDTO:
      required:
      - description
      - gst-percentage
      - id
      - mrp
      - name
      - quantity
      - uid
      type: object
      properties:
        id:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        quantity:
          minimum: 0
          type: integer
          format: int32
        mrp:
          minimum: 0
          type: number
          format: double
        name:
          minLength: 1
          type: string
        uid:
          type: string
        gst-percentage:
          maximum: 28
          minimum: 0
          type: number
          format: double
    ClaimType:
      required:
      - id
      - type-name
      type: object
      properties:
        id:
          type: string
        type-name:
          minLength: 1
          type: string
    Filter:
      required:
      - field
      - value
      type: object
      properties:
        field:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    GenericDto:
      required:
      - body
      type: object
      properties:
        body:
          minLength: 1
          type: string
    MessageBean:
      type: object
      properties:
        message:
          type: string
        stack-trace:
          type: string
        data: {}
    Product:
      required:
      - gst-percentage
      - id
      - mrp
      - name
      - uid
      type: object
      properties:
        id:
          type: string
        mrp:
          minimum: 0
          type: number
          format: double
        name:
          minLength: 1
          type: string
        uid:
          minLength: 1
          type: string
        gst-percentage:
          maximum: 28
          minimum: 0
          type: number
          format: double
    TopKClaimRequest:
      required:
      - sort-by
      - target
      type: object
      properties:
        fields:
          type: array
          items:
            type: string
        filters:
          type: array
          items:
            $ref: '#/components/schemas/Filter'
        target:
          minLength: 1
          type: string
        sort-by:
          minLength: 1
          type: string
        limit:
          minimum: 0
          type: integer
          format: int32
    User:
      required:
      - active
      - address
      - company-name
      - created-date
      - display-name
      - email
      - gst-number
      - id
      - last-login-date
      - phone
      - region
      - roles
      type: object
      properties:
        id:
          type: string
        display-name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        company-name:
          minLength: 1
          type: string
        address:
          minLength: 1
          type: string
        gst-number:
          type: string
        region:
          type: string
        last-login-date:
          type: string
          format: date-time
        created-date:
          type: string
          format: date-time
        active:
          type: boolean
        roles:
          minItems: 1
          type: array
          items:
            type: string
    UserSignUp:
      type: object
      allOf:
      - $ref: '#/components/schemas/User'
      - required:
        - password
        properties:
          password:
            minLength: 1
            type: string
