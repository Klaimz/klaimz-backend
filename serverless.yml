service: klaimz
frameworkVersion: '3'
useDotenv: true
params:
  ramvey:
    ENV: ramvey
  dev:
    ENV: dev
provider:
  name: aws
  environment:
    S3_FILE_BUCKET: ${env:S3_FILE_BUCKET}
    MONGODB_URI: ${env:MONGODB_URI}
  runtime: java21
  memorySize: 700
  timeout: 800
  deploymentBucket:
    name: klaimz-serverlessdeploymentbucket
  httpApi:
    cors:
      allowCredentials: false
      allowedOrigins:
      - '*'
      allowedHeaders:
      - '*'
  iam:
    role:
      statements:
      - Effect: Allow
        Action: '*'
        Resource: '*'
  region: ap-south-1
package:
  individually: true
  exclude:
  - ./**
functions:
  authorizer:
    handler: com.klaimz.authorizer.AuthorizerHandler
    events:
    - eventBridge: ${file(warmup_event.yml)}
    environment:
      CORE_FUNCTION_NAME: ${self:service}-${param:ENV}-core
    package:
      artifact: authorizer/build/libs/klaimz-authorizer.jar
  core:
    handler: io.micronaut.function.aws.proxy.payload2.APIGatewayV2HTTPEventFunction
    package:
      artifact: core/build/libs/klaimz-core.jar
    events:
    - eventBridge: ${file(warmup_event.yml)}
    - httpApi:
        path: /analytics/claim
        method: post
    - httpApi:
        path: /claim
        method: post
    - httpApi:
        path: /claim/all
        method: get
    - httpApi:
        path: /claim/search
        method: post
    - httpApi:
        path: /claim/types
        method: post
    - httpApi:
        path: /claim/types
        method: get
    - httpApi:
        path: /claim/{id}
        method: get
    - httpApi:
        path: /claim/{id}
        method: patch
    - httpApi:
        path: /claim/{id}/comment
        method: post
    - httpApi:
        path: /claim/{id}/status
        method: post
    - httpApi:
        path: /claim/{id}/{fieldKey}/download
        method: get
    - httpApi:
        path: /claim/{id}/{fieldKey}/upload
        method: post
    - httpApi:
        path: /product
        method: post
    - httpApi:
        path: /product/all
        method: get
    - httpApi:
        path: /product/{id}
        method: get
    - httpApi:
        path: /user/all
        method: get
    - httpApi:
        path: /user/login
        method: post
    - httpApi:
        path: /user/me
        method: get
    - httpApi:
        path: /user/search
        method: post
    - httpApi:
        path: /user/signup
        method: post
    - httpApi:
        path: /user/{id}
        method: get
    - httpApi:
        path: /warmup
        method: get
